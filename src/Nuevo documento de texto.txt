import React from 'react';
import funciones from './funciones-guardar';
//import guardarPartes from './funciones-guardar';
import _ from 'underscore';
import firebase from './conexion'
import Firebase from 'firebase'
import ReactFireMixin from 'reactfire'
import { firebaseConnect } from 'react-firebase'
import { ControlLabel, Button, Form, Label, FormControl, FormGroup, Password, Modal, Popover, Tooltip, Select } from 'react-bootstrap';
import { Nav, NavItem, handleSelect, DropdownButton, MenuItem, Row, Col, ButtonGroup, Table } from 'react-bootstrap';

//var db = firebase.database();

/*
<script src="https://www.gstatic.com/firebasejs/3.7.2/firebase.js"></script>
<script>
  // Initialize Firebase
  var config = {
    apiKey: "AIzaSyBnN1ppFoSSFkBPfAwukIJg7TAjXvW4vWA",
    authDomain: "bd-cotizacion.firebaseapp.com",
    databaseURL: "https://bd-cotizacion.firebaseio.com",
    storageBucket: "bd-cotizacion.appspot.com",
    messagingSenderId: "290907389991"
  };
  firebase.initializeApp(config);
</script>*/

var db = firebase.database();
var qExpensas = db.ref("expensas");

/*var guardarPartes = (c,n,u,cant,ca,m,p) => {
	var myRef = qPartes.push();
	var key = myRef.key;
	var newData={
		id: key,
		codigoParte: c,
		nombre: n,
		unidad : u,
		cantidadTotal: cant,
		categoria : ca,
		marca: m,
		precioUnBs: p,
	}
	myRef.set(newData);
}; 
var  guardarUnidades = (u) => {
	var myRef = qUnidades.push();
	var key = myRef.key;
	myRef.set({nomUnidad: u});
};*/

class RegistrosEdificio extends React.Component{
	constructor(props) {
		super(props);
		this.state = {
			mostrarModalExp:false, 
			arrayExp: [],
			codigoExp:'', nombreExp:'', empresaExp:'',
		};
	}
	//En ES6 el willmount de cualquier cosa que no sea modificacion de state va dentro del contructor
	componentWillMount(){
		qExpensas.on("value",(snapshot) => {
			this.setState({ arrayExp: snapshot.val() });
		},this );
	}
	registrar =()=>{
		funciones.guardarExp(
			this.state.nombreExp,
			this.state.codigoExp,
			this.state.empresaExp,
		);
		this.cerrarModalExp();
	}
	abrirModalExp=()=>{this.setState({ mostrarModalExp: true });}
	cerrarModalExp=()=>{this.setState({ mostrarModalExp: false });}
	handleGuardarCodigo=(e)=> { this.setState({ codigoExp: e.target.value, });}
	handleGuardarNombre=(e)=> { this.setState({ nombreExp: e.target.value, });}
	handleGuardarEmpresa=(e)=> { this.setState({ empresaExp: e.target.value,});}
	render() {
		return (
		<div className="RegistrosEdificio">
			<Row>
				<Col xs={36} sm={18} md={12}>
					<ButtonGroup>
							<Button bsSize="large" bsStyle="primary" onClick={this.abrirModalExp}>Registrar Nuevas Expensas</Button>
					</ButtonGroup>
				</Col>
			</Row>
			<Modal show={this.state.mostrarModalExp} onHide={this.cerrarModalExp}>
				<Modal.Header closeButton>
					<Modal.Title>Productos</Modal.Title>
				</Modal.Header>
				<Modal.Body>
				<div>
					<Label>Codigo Expensa: </Label>
					<FormControl type="text" onChange={this.handleGuardarCodigo} value={this.state.codigoExp} placeholder="Codigo" />
					<Label>Nombre Expensa: </Label>
					<FormControl type="text" onChange={this.handleGuardarNombre} value={this.state.nombreExp} placeholder="Nombre" />
					<Label>Nombre Empresa a pagar: </Label>
					<FormControl type="text" onChange={this.handleGuardarEmpresa} value={this.state.empresaExp} placeholder="Empresa" />
					<Label>Seleccionar Unidad:</Label>
					<FormControl componentClass="select" multiple style={{"height":"200px"}}>
						{_.map(this.state.arrayExp,(value) => 
							<option>{value.codigoExpensa} {value.nombreExpensa} {value.empresaProv} </option>
						)}
					</FormControl>
				</div>
				</Modal.Body>
				<Modal.Footer>
					<Button bsSize="large" bsStyle="primary" onClick={this.registrar}> Registrar</Button>
					<Button bsSize="large" bsStyle="danger" onClick={this.cerrarModalExp}>Cerrar</Button>
				</Modal.Footer>
			</Modal>
		</div>
		);
	}		
}

export default RegistrosEdificio